# docs: https://docs.helix-editor.com/languages.html
# default: https://github.com/helix-editor/helix/blob/2cadec0b1182332338a5a1cc3062776f834d8835/languages.toml

# WARN there is plan to replace the language from toml to scheme/steel
# https://github.com/helix-editor/helix/issues/10389
# https://github.com/helix-editor/helix/issues/8853


[language-server.vscode-eslint-language-server]
command = "vscode-eslint-language-server" # NOTE v4.9.0-v4.10.0 is buggy with eslint diagnostics
args = ["--stdio"]

[language-server.vscode-eslint-language-server.config]
validate = "on"
experimental = { useFlatConfig = false }
rulesCustomizations = []
run = "onType"
problems = { shortenToSingleLine = false }
nodePath = ""

[language-server.vscode-eslint-language-server.config.codeAction.disableRuleComment]
enable = true
location = "separateLine"

[language-server.vscode-eslint-language-server.config.codeAction.showDocumentation]
enable = true

[language-server.vscode-eslint-language-server.config.workingDirectory]
mode = "location"

[language-server.vscode-css-language-server.config]
css = { lint = { unknownAtRules = "ignore" } }


[[language]]
name = "javascript"
formatter = { command = "prettier", args = ["--config-precedence", "file-override", "--no-semi", "--experimental-ternaries", "--parser", "typescript"] }
language-servers = [
	{ name = "typescript-language-server", except-features = ["format"] },
	"tailwindcss-ls",
	"vscode-eslint-language-server",
]

[[language]]
name = "typescript"
formatter = { command = "prettier", args = ["--config-precedence", "file-override", "--no-semi", "--experimental-ternaries", "--parser", "typescript"] }
language-servers = [
	{ name = "typescript-language-server", except-features = ["format"] },
	"tailwindcss-ls",
	"vscode-eslint-language-server",
]

[[language]]
name = "jsx"
formatter = { command = "prettier", args = ["--config-precedence", "file-override", "--no-semi", "--experimental-ternaries", "--parser", "typescript"] }
language-servers = [
	{ name = "typescript-language-server", except-features = ["format"] },
	"tailwindcss-ls",
	"vscode-eslint-language-server",
]

[[language]]
name = "tsx"
formatter = { command = "prettier", args = ["--config-precedence", "file-override", "--no-semi", "--experimental-ternaries", "--parser", "typescript"] }
language-servers = [
	{ name = "typescript-language-server", except-features = ["format"] },
	"tailwindcss-ls",
	"vscode-eslint-language-server",
]


[[language]]
name = "html"
language-servers = ["vscode-html-language-server", "tailwindcss-ls"]

[[language]]
name = "css"
language-servers = ["vscode-css-language-server", "tailwindcss-ls"]
formatter = { command = "prettier", args = ["--parser", "css"] }

[[language]]
name = "scss"
formatter = { command = "prettier", args = ["--parser", "scss"] }

[[language]]
name = "json"
formatter = { command = "prettier", args = ["--parser", "json"] }

[[language]]
name = "toml"
indent = { tab-width = 2, unit = "\t" }
formatter = { command = "taplo", args = ["fmt", "-o", "indent_string=\t", "-o", "inline_table_expand=false", "-o", "column_width=120", "-"] }

[[language]]
name = "yaml"
formatter = { command = "prettier", args = ["--parser", "yaml"] }

[[language]]
name = "kdl"
indent = { tab-width = 4, unit = "    " }

[[language]]
name = "nu"
indent = { tab-width = 4, unit = "    " }

[[language]]
name = "bash"
indent = { tab-width = 4, unit = "\t" }
formatter = { command = 'shfmt', args = ["-i", "0"] } # 0 for tabs, 1..4 for N of spaces

[[language]]
name = "lua"
formatter = { command = "stylua", args = ["-"] }


[[language-server.vscode-json-language-server.config.json.schemas]]
fileMatch = ["tsconfig.json", "tsconfig.*.json"]
url = "https://json.schemastore.org/tsconfig.json"

[[language-server.vscode-json-language-server.config.json.schemas]]
fileMatch = ["package.json"]
url = "https://json.schemastore.org/package.json"

[[language-server.vscode-json-language-server.config.json.schemas]]
fileMatch = ["vercel.json"]
url = "https://openapi.vercel.sh/vercel.json"
